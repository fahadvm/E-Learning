"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = require("inversify");
const types_1 = require("./types");
const StudentRepository_1 = require("../../repositories/StudentRepository");
const CompanyRepository_1 = require("../../repositories/CompanyRepository");
const AdminRepository_1 = require("../../repositories/AdminRepository");
const EmployeeRepository_1 = require("../../repositories/EmployeeRepository");
const TeacherRepository_1 = require("../../repositories/TeacherRepository");
const OtpRepository_1 = require("../../repositories/OtpRepository");
const CourseRepository_1 = require("../../repositories/CourseRepository");
const SubscriptionPlanRepository_1 = require("../../repositories/SubscriptionPlanRepository");
const WishlistRepository_1 = require("../../repositories/WishlistRepository");
const CartRepository_1 = require("../../repositories/CartRepository");
const OrderRepository_1 = require("../../repositories/OrderRepository");
const CompanyOrderRepository_1 = require("../../repositories/CompanyOrderRepository");
const TeacherAvailibilityRepository_1 = require("../../repositories/TeacherAvailibilityRepository");
const StudentBookingRepository_1 = require("../../repositories/StudentBookingRepository");
const student_auth_service_1 = require("../../services/student/student.auth.service");
const student_profile_service_1 = require("../../services/student/student.profile.service");
const student_course_service_1 = require("../../services/student/student.course.service");
const student_subscription_service_1 = require("../../services/student/student.subscription.service");
const student_wishlist_service_1 = require("../../services/student/student.wishlist.service");
const student_cart_service_1 = require("../../services/student/student.cart.service");
const student_purchase_service_1 = require("../../services/student/student.purchase.service");
const student_booking_service_1 = require("../../services/student/student.booking.service");
const company_auth_service_1 = require("../../services/company/company.auth.service");
const company_profile_service_1 = require("../../services/company/company.profile.service");
const company_course_service_1 = require("../../services/company/company.course.service");
const company_employee_service_1 = require("../../services/company/company.employee.service");
const company_subscripton_service_1 = require("../../services/company/company.subscripton.service");
const company_wishlist_service_1 = require("../../services/company/company.wishlist.service");
const company_cart_service_1 = require("../../services/company/company.cart.service");
const company_purchase_service_1 = require("../../services/company/company.purchase.service");
const Admin_Auth_Service_1 = require("../../services/admin/Admin.Auth.Service");
const Admin_Student_Service_1 = require("../../services/admin/Admin.Student.Service");
const Admin_Course_Service_1 = require("../../services/admin/Admin.Course.Service");
const Admin_Teacher_Service_1 = require("../../services/admin/Admin.Teacher.Service");
const Admin_Company_Service_1 = require("../../services/admin/Admin.Company.Service");
const Admin_Subscription_Service_1 = require("../../services/admin/Admin.Subscription.Service");
const Admin_order_Service_1 = require("../../services/admin/Admin.order.Service");
const teacher_auth_service_1 = require("../../services/teacher/teacher.auth.service");
const teacher_course_service_1 = require("../../services/teacher/teacher.course.service");
const teacher_profile_service_1 = require("../../services/teacher/teacher.profile.service");
const teacher_availability_service_1 = require("../../services/teacher/teacher.availability.service");
const employee_auth_service_1 = require("../../services/employee/employee.auth.service");
const employee_profile_service_1 = require("../../services/employee/employee.profile.service");
const employee_company_service_1 = require("../../services/employee/employee.company.service");
const employee_course_service_1 = require("../../services/employee/employee.course.service");
// ===== Controllers =====
const student_auth_controller_1 = require("../../controllers/student/student.auth.controller");
const student_profile_controller_1 = require("../../controllers/student/student.profile.controller");
const student_course_controller_1 = require("../../controllers/student/student.course.controller");
const student_subscription_controller_1 = require("../../controllers/student/student.subscription.controller");
const student_wishlist_controller_1 = require("../../controllers/student/student.wishlist.controller");
const student_cart_controller_1 = require("../../controllers/student/student.cart.controller");
const student_purchase_controller_1 = require("../../controllers/student/student.purchase.controller");
const student_booking_controller_1 = require("../../controllers/student/student.booking.controller");
const company_auth_controller_1 = require("../../controllers/company/company.auth.controller");
const company_employee_controller_1 = require("../../controllers/company/company.employee.controller");
const company_course_controller_1 = require("../../controllers/company/company.course.controller");
const company_profile_controller_1 = require("../../controllers/company/company.profile.controller");
const company_subscription_controller_1 = require("../../controllers/company/company.subscription.controller");
const company_wishlist_controller_1 = require("../../controllers/company/company.wishlist.controller");
const company_cart_controller_1 = require("../../controllers/company/company.cart.controller");
const company_purchase_controller_1 = require("../../controllers/company/company.purchase.controller");
const admin_auth_controller_1 = require("../../controllers/admin/admin.auth.controller");
const admin_course_controller_1 = require("../../controllers/admin/admin.course.controller");
const admin_teacher_controller_1 = require("../../controllers/admin/admin.teacher.controller");
const admin_subscription_controller_1 = require("../../controllers/admin/admin.subscription.controller");
const admin_student_controller_1 = require("../../controllers/admin/admin.student.controller");
const admin_order_controller_1 = require("../../controllers/admin/admin.order.controller");
const teacher_auth_controller_1 = require("../../controllers/teacher/teacher.auth.controller");
const teacher_course_controller_1 = require("../../controllers/teacher/teacher.course.controller");
const teacher_profile_controller_1 = require("../../controllers/teacher/teacher.profile.controller");
const teacher_availability_controller_1 = require("../../controllers/teacher/teacher.availability.controller");
const admin_company_controller_1 = require("../../controllers/admin/admin.company.controller");
const employee_profile_controller_1 = require("../../controllers/employee/employee.profile.controller");
const employee_auth_controller_1 = require("../../controllers/employee/employee.auth.controller");
const employee_company_controller_1 = require("../../controllers/employee/employee.company.controller");
const employee_course_controller_1 = require("../../controllers/employee/employee.course.controller");
const student_teacher_service_1 = require("../../services/student/student.teacher.service");
const student_teacher_controller_1 = require("../../controllers/student/student.teacher.controller");
const teacher_call_request_controller_1 = require("../../controllers/teacher/teacher.call.request.controller");
const teacher_call_request_service_1 = require("../../services/teacher/teacher.call.request.service");
const ChatRepository_1 = require("../../repositories/ChatRepository");
const student_chat_service_1 = require("../../services/student/student.chat.service");
const student_chat_controller_1 = require("../../controllers/student/student.chat.controller");
const student_notification_controller_1 = require("../../controllers/student/student.notification.controller");
const StudentNotificationRepository_1 = require("../../repositories/StudentNotificationRepository");
const student_notification_service_1 = require("../../services/student/student.notification.service");
const shared_controller_1 = require("../../controllers/shared/shared.controller");
const NotificationRepository_1 = require("../../repositories/NotificationRepository");
const notification_controller_1 = require("../../controllers/shared/notification.controller");
const notification_service_1 = require("../../services/shared/notification.service");
const teacher_chat_controller_1 = require("../../controllers/teacher/teacher.chat.controller");
const teacher_chat_service_1 = require("../../services/teacher/teacher.chat.service");
const CourseResourceRepository_1 = require("../../repositories/CourseResourceRepository");
const student_comment_service_1 = require("../../services/student/student.comment.service");
const CommentRepository_1 = require("../../repositories/CommentRepository");
const student_comment_controller_1 = require("../../controllers/student/student.comment.controller");
const ai_controller_1 = require("../../controllers/shared/ai.controller");
const ai_service_1 = require("../../services/shared/ai.service");
const container = new inversify_1.Container();
// ===== Bind Repositories =====
container.bind(types_1.TYPES.StudentRepository).to(StudentRepository_1.StudentRepository);
container.bind(types_1.TYPES.CompanyRepository).to(CompanyRepository_1.CompanyRepository);
container.bind(types_1.TYPES.AdminRepository).to(AdminRepository_1.AdminRepository);
container.bind(types_1.TYPES.EmployeeRepository).to(EmployeeRepository_1.EmployeeRepository);
container.bind(types_1.TYPES.TeacherRepository).to(TeacherRepository_1.TeacherRepository);
container.bind(types_1.TYPES.OtpRepository).to(OtpRepository_1.OtpRepository);
container.bind(types_1.TYPES.CourseRepository).to(CourseRepository_1.CourseRepository);
container.bind(types_1.TYPES.SubscriptionPlanRepository).to(SubscriptionPlanRepository_1.SubscriptionPlanRepository);
container.bind(types_1.TYPES.WishlistRepository).to(WishlistRepository_1.WishlistRepository);
container.bind(types_1.TYPES.CartRepository).to(CartRepository_1.CartRepository);
container.bind(types_1.TYPES.OrderRepository).to(OrderRepository_1.OrderRepository);
container.bind(types_1.TYPES.CompanyOrderRepository).to(CompanyOrderRepository_1.CompanyOrderRepository);
container.bind(types_1.TYPES.TeacherAvailabilityRepository).to(TeacherAvailibilityRepository_1.TeacherAvailabilityRepository);
container.bind(types_1.TYPES.StudentBookingRepository).to(StudentBookingRepository_1.StudentBookingRepository);
container.bind(types_1.TYPES.CourseResourceRepository).to(CourseResourceRepository_1.CourseResourceRepository);
container.bind(types_1.TYPES.ChatRepository).to(ChatRepository_1.ChatRepository);
container.bind(types_1.TYPES.ChatService).to(student_chat_service_1.ChatService);
container.bind(types_1.TYPES.ChatController).to(student_chat_controller_1.ChatController);
container.bind(types_1.TYPES.TeacherChatController).to(teacher_chat_controller_1.TeacherChatController);
container.bind(types_1.TYPES.TeacherChatService).to(teacher_chat_service_1.TeacherChatService);
container.bind(types_1.TYPES.StudentCommentService).to(student_comment_service_1.StudentCommentService);
container.bind(types_1.TYPES.CommentRepository).to(CommentRepository_1.CommentRepository);
container.bind(types_1.TYPES.StudentCommentController).to(student_comment_controller_1.StudentCommentController);
// ===== Bind Services =====
container.bind(types_1.TYPES.StudentAuthService).to(student_auth_service_1.StudentAuthService);
container.bind(types_1.TYPES.StudentProfileService).to(student_profile_service_1.StudentProfileService);
container.bind(types_1.TYPES.StudentCourseService).to(student_course_service_1.StudentCourseService);
container.bind(types_1.TYPES.StudentSubscriptionService).to(student_subscription_service_1.StudentSubscriptionService);
container.bind(types_1.TYPES.StudentWishlistService).to(student_wishlist_service_1.StudentWishlistService);
container.bind(types_1.TYPES.StudentCartService).to(student_cart_service_1.StudentCartService);
container.bind(types_1.TYPES.StudentPurchaseService).to(student_purchase_service_1.StudentPurchaseService);
container.bind(types_1.TYPES.StudentBookingService).to(student_booking_service_1.StudentBookingService);
container.bind(types_1.TYPES.StudentTeacherService).to(student_teacher_service_1.StudentTeacherService);
container.bind(types_1.TYPES.CompanyAuthService).to(company_auth_service_1.CompanyAuthService);
container.bind(types_1.TYPES.CompanyProfileService).to(company_profile_service_1.CompanyProfileService);
container.bind(types_1.TYPES.CompanyCourseService).to(company_course_service_1.CompanyCourseService);
container.bind(types_1.TYPES.CompanyEmployeeService).to(company_employee_service_1.CompanyEmployeeService);
container.bind(types_1.TYPES.CompanySubscriptionService).to(company_subscripton_service_1.CompanySubscriptionService);
container.bind(types_1.TYPES.CompanyWishlistService).to(company_wishlist_service_1.CompanyWishlistService);
container.bind(types_1.TYPES.CompanyCartService).to(company_cart_service_1.CompanyCartService);
container.bind(types_1.TYPES.CompanyPurchaseService).to(company_purchase_service_1.CompanyPurchaseService);
container.bind(types_1.TYPES.AdminAuthService).to(Admin_Auth_Service_1.AdminAuthService);
container.bind(types_1.TYPES.AdminStudentService).to(Admin_Student_Service_1.AdminStudentService);
container.bind(types_1.TYPES.AdminTeacherService).to(Admin_Teacher_Service_1.AdminTeacherService);
container.bind(types_1.TYPES.AdminCourseService).to(Admin_Course_Service_1.AdminCourseService);
container.bind(types_1.TYPES.AdminCompanyService).to(Admin_Company_Service_1.AdminCompanyService);
container.bind(types_1.TYPES.AdminSubscriptionPlanService).to(Admin_Subscription_Service_1.AdminSubscriptionPlanService);
container.bind(types_1.TYPES.AdminOrderService).to(Admin_order_Service_1.AdminOrderService);
container.bind(types_1.TYPES.TeacherAuthService).to(teacher_auth_service_1.TeacherAuthService);
container.bind(types_1.TYPES.TeacherCourseService).to(teacher_course_service_1.TeacherCourseService);
container.bind(types_1.TYPES.TeacherProfileService).to(teacher_profile_service_1.TeacherProfileService);
container.bind(types_1.TYPES.TeacherAvailabilityService).to(teacher_availability_service_1.TeacherAvailabilityService);
container.bind(types_1.TYPES.TeacherCallRequestService).to(teacher_call_request_service_1.TeacherCallRequestService);
container.bind(types_1.TYPES.EmployeeAuthService).to(employee_auth_service_1.EmployeeAuthService);
container.bind(types_1.TYPES.EmployeeProfileService).to(employee_profile_service_1.EmployeeProfileService);
container.bind(types_1.TYPES.EmployeeCompanyService).to(employee_company_service_1.EmployeeCompanyService);
container.bind(types_1.TYPES.EmployeeCourseService).to(employee_course_service_1.EmployeeCourseService);
// ===== Bind Controllers =====
container.bind(types_1.TYPES.StudentAuthController).to(student_auth_controller_1.StudentAuthController);
container.bind(types_1.TYPES.StudentProfileController).to(student_profile_controller_1.StudentProfileController);
container.bind(types_1.TYPES.StudentCourseController).to(student_course_controller_1.StudentCourseController);
container.bind(types_1.TYPES.StudentSubscriptionController).to(student_subscription_controller_1.StudentSubscriptionController);
container.bind(types_1.TYPES.StudentWishlistController).to(student_wishlist_controller_1.StudentWishlistController);
container.bind(types_1.TYPES.StudentCartController).to(student_cart_controller_1.StudentCartController);
container.bind(types_1.TYPES.StudentPurchaseController).to(student_purchase_controller_1.StudentPurchaseController);
container.bind(types_1.TYPES.StudentBookingController).to(student_booking_controller_1.StudentBookingController);
container.bind(types_1.TYPES.StudentTeacherController).to(student_teacher_controller_1.StudentTeacherController);
container.bind(types_1.TYPES.CompanyAuthController).to(company_auth_controller_1.CompanyAuthController);
container.bind(types_1.TYPES.CompanyProfileController).to(company_profile_controller_1.CompanyProfileController);
container.bind(types_1.TYPES.CompanyEmployeeController).to(company_employee_controller_1.CompanyEmployeeController);
container.bind(types_1.TYPES.CompanyCourseController).to(company_course_controller_1.CompanyCourseController);
container.bind(types_1.TYPES.CompanySubscriptionController).to(company_subscription_controller_1.CompanySubscriptionController);
container.bind(types_1.TYPES.CompanyWishlistController).to(company_wishlist_controller_1.CompanyWishlistController);
container.bind(types_1.TYPES.CompanyCartController).to(company_cart_controller_1.CompanyCartController);
container.bind(types_1.TYPES.CompanyPurchaseController).to(company_purchase_controller_1.CompanyPurchaseController);
container.bind(types_1.TYPES.AdminAuthController).to(admin_auth_controller_1.AdminAuthController);
container.bind(types_1.TYPES.AdminCourseController).to(admin_course_controller_1.AdminCourseController);
container.bind(types_1.TYPES.AdminTeacherController).to(admin_teacher_controller_1.AdminTeacherController);
container.bind(types_1.TYPES.AdminStudentController).to(admin_student_controller_1.AdminStudentController);
container.bind(types_1.TYPES.AdminCompanyController).to(admin_company_controller_1.AdminCompanyController);
container.bind(types_1.TYPES.AdminSubscriptionPlanController).to(admin_subscription_controller_1.AdminSubscriptionPlanController);
container.bind(types_1.TYPES.AdminOrderController).to(admin_order_controller_1.AdminOrderController);
container.bind(types_1.TYPES.TeacherAuthController).to(teacher_auth_controller_1.TeacherAuthController);
container.bind(types_1.TYPES.TeacherCourseController).to(teacher_course_controller_1.TeacherCourseController);
container.bind(types_1.TYPES.TeacherProfileController).to(teacher_profile_controller_1.TeacherProfileController);
container.bind(types_1.TYPES.TeacherAvailabilityController).to(teacher_availability_controller_1.TeacherAvailabilityController);
container.bind(types_1.TYPES.TeacherCallRequestController).to(teacher_call_request_controller_1.TeacherCallRequestController);
container.bind(types_1.TYPES.EmployeeProfileController).to(employee_profile_controller_1.EmployeeProfileController);
container.bind(types_1.TYPES.EmployeeAuthController).to(employee_auth_controller_1.EmployeeAuthController);
container.bind(types_1.TYPES.EmployeeCompanyController).to(employee_company_controller_1.EmployeeCompanyController);
container.bind(types_1.TYPES.EmployeeCourseController).to(employee_course_controller_1.EmployeeCourseController);
container.bind(types_1.TYPES.StudentNotificationRepository).to(StudentNotificationRepository_1.StudentNotificationRepository);
container.bind(types_1.TYPES.StudentNotificationService).to(student_notification_service_1.StudentNotificationService);
container.bind(types_1.TYPES.StudentNotificationController).to(student_notification_controller_1.StudentNotificationController);
container.bind(types_1.TYPES.SharedController).to(shared_controller_1.SharedController);
container.bind(types_1.TYPES.AiTutorController).to(ai_controller_1.AiTutorController);
container.bind(types_1.TYPES.StudentAiTutorService).to(ai_service_1.StudentAiTutorService);
container.bind(types_1.TYPES.NotificationRepository).to(NotificationRepository_1.NotificationRepository);
container.bind(types_1.TYPES.NotificationController).to(notification_controller_1.NotificationController);
container.bind(types_1.TYPES.NotificationService).to(notification_service_1.NotificationService);
exports.default = container;
